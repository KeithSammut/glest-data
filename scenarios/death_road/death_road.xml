<?xml version="1.0" standalone="yes" ?>
<!--
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->
<scenario>
	<difficulty value="3"/>
	<players>
		<player control="human" faction="tech" team="1"/>
		<player control="cpu" faction="magic" team="2"/>
		<player control="cpu" faction="magic" team="2"/>
		<player control="cpu" faction="tech" team="1"/>
		<player control="cpu" faction="natives" team="3"/>
		<player control="cpu" faction="natives" team="3"/>
		<player control="cpu" faction="natives" team="3"/>
		<player control="cpu" faction="natives" team="3"/>
	</players>
	<map value="Death_Road"/>
	<tileset value="dark_forest"/>
	<tech-tree value="glestpack"/>
	<default-resources value="false"/>
	<default-units value="false"/>
	<fog-of-war value="false"/>
	<default-victory-conditions value="false"/>
	<scripts>
		<startup>
			-- Disable A.I.
			disableAi(1)
			disableAi(2)
			disableAi(3)
			disableAi(4)
			disableAi(5)
			disableAi(6)
			disableAi(7)
			disableConsume(0)
			disableConsume(1)
			disableConsume(2)
			disableConsume(3)
			disableConsume(4)
			disableConsume(5)
			disableConsume(6)
			disableConsume(7)

			-- Create player's units
			createUnit('worker', 0, startLocation(0))
			worker = lastCreatedUnit()
			selectUnit(worker)
			createUnit('archer', 0, {startLocation(0)[1] + 2, startLocation(0)[2] - 1})
			createUnit('archer', 0, {startLocation(0)[1] + 2, startLocation(0)[2] + 1})
			createUnit('swordman', 0, {startLocation(0)[1] + 4, startLocation(0)[2]})
			createUnit('swordman', 0, {startLocation(0)[1] + 4, startLocation(0)[2] - 2})
			createUnit('swordman', 0, {startLocation(0)[1] + 4, startLocation(0)[2] - 4})
			createUnit('swordman', 0, {startLocation(0)[1] + 4, startLocation(0)[2] + 2})
			createUnit('swordman', 0, {startLocation(0)[1] + 4, startLocation(0)[2] + 4})
			createUnit('swordman', 0, {startLocation(0)[1] - 2, startLocation(0)[2]})
			createUnit('swordman', 0, {startLocation(0)[1] - 2, startLocation(0)[2] - 2})
			createUnit('swordman', 0, {startLocation(0)[1] - 2, startLocation(0)[2] + 2})
			createUnit('horseman', 0, {startLocation(0)[1], startLocation(0)[2] - 5})
			createUnit('horseman', 0, {startLocation(0)[1], startLocation(0)[2] + 5})
			createUnit('technician', 0, {startLocation(0)[1] - 6, startLocation(0)[2] + 5})
			createUnit('farm', 0, {startLocation(0)[1] - 10, startLocation(0)[2]})

            createUnit('castle', 3, startLocation(3))
            castle = lastCreatedUnit()
            createUnit('farm', 0, {startLocation(3)[1] + 8, startLocation(3)[2]})
            createUnit('barracks', 3, {startLocation(3)[1], startLocation(3)[2] - 8})
            createUnit('blacksmith', 3, {startLocation(3)[1], startLocation(3)[2] + 8})
            blacksmith = lastCreatedUnit()
            createUnit('air_ballista', 3, {startLocation(3)[1] + 6, startLocation(3)[2] - 6})
            createUnit('air_ballista', 3, {startLocation(3)[1] + 6, startLocation(3)[2] + 6})
            createUnit('technician', 3, {startLocation(3)[1] + 8, startLocation(3)[2] - 6})
            createUnit('technician', 3, {startLocation(3)[1] + 8, startLocation(3)[2] + 6})

            createUnit('defense_tower', 3, {startLocation(3)[1] - 9, startLocation(3)[2] - 2})
            createUnit('defense_tower', 3, {startLocation(3)[1] - 7, startLocation(3)[2] + 8})
            createUnit('archer', 3, {startLocation(3)[1] - 9, startLocation(3)[2] + 2})
            createUnit('archer', 3, {startLocation(3)[1] - 7, startLocation(3)[2] + 5})
            createUnit('archer', 3, {startLocation(3)[1] - 5, startLocation(3)[2] - 1})
            createUnit('archer', 3, {startLocation(3)[1] - 5, startLocation(3)[2] + 2})
            createUnit('archer', 3, {startLocation(3)[1] - 4, startLocation(3)[2] + 5})
            createUnit('archer', 3, {startLocation(3)[1] - 3, startLocation(3)[2] + 8})
            createUnit('horseman', 3, {startLocation(3)[1] - 5, startLocation(3)[2] - 6})
            createUnit('horseman', 3, {startLocation(3)[1] - 4, startLocation(3)[2] + 12})
            createUnit('guard', 3, {startLocation(3)[1] - 11, startLocation(3)[2] + 2})
            createUnit('guard', 3, {startLocation(3)[1] - 10, startLocation(3)[2] + 5})
            createUnit('swordman', 3, {startLocation(3)[1] - 14, startLocation(3)[2] - 1})
            createUnit('swordman', 3, {startLocation(3)[1] - 14, startLocation(3)[2] + 2})
            createUnit('swordman', 3, {startLocation(3)[1] - 13, startLocation(3)[2] + 5})
            createUnit('swordman', 3, {startLocation(3)[1] - 13, startLocation(3)[2] + 8})

            -- Give the ally player upgrades
            giveResource('gold', 3, 550)
            giveResource('wood', 3, 600)
            giveUpgradeCommand(blacksmith, 'blade_weapons')
            giveUpgradeCommand(blacksmith, 'piercing_weapons')
            giveUpgradeCommand(blacksmith, 'shield_level_1')

            registerCellTriggerEventForUnitToUnit(worker, castle)

			-- Create enemy units
			createUnit('golem', 1, startLocation(1))
			createUnit('dragon_rider', 1, {startLocation(1)[1] - 8, startLocation(1)[2] - 4})
			createUnit('dragon_rider', 1, {startLocation(1)[1] - 9, startLocation(1)[2]})
			createUnit('dragon_rider', 1, {startLocation(1)[1] - 8, startLocation(1)[2] + 4})
			createUnit('dragon_rider', 1, {startLocation(1)[1] - 4, startLocation(1)[2] - 2})
			createUnit('dragon_rider', 1, {startLocation(1)[1] - 4, startLocation(1)[2] + 2})
			createUnit('summoner', 1, {startLocation(1)[1] + 8, startLocation(1)[2] - 4})
			createUnit('summoner', 1, {startLocation(1)[1] + 8, startLocation(1)[2]})
			createUnit('summoner', 1, {startLocation(1)[1] + 8, startLocation(1)[2] + 4})

			createUnit('dragon', 2, {startLocation(2)[1], startLocation(2)[2] - 2})
			createUnit('dragon', 2, {startLocation(2)[1], startLocation(2)[2] + 2})
			createUnit('battlemage', 2, {startLocation(2)[1] - 4, startLocation(2)[2] - 1})
			createUnit('battlemage', 2, {startLocation(2)[1] - 4, startLocation(2)[2] - 3})
			createUnit('battlemage', 2, {startLocation(2)[1] - 4, startLocation(2)[2] + 1})
			createUnit('battlemage', 2, {startLocation(2)[1] - 4, startLocation(2)[2] + 3})
			createUnit('daemon', 2, {startLocation(2)[1] + 4, startLocation(2)[2] - 1})
			createUnit('daemon', 2, {startLocation(2)[1] + 4, startLocation(2)[2] - 3})
			createUnit('daemon', 2, {startLocation(2)[1] + 4, startLocation(2)[2] + 1})
			createUnit('daemon', 2, {startLocation(2)[1] + 4, startLocation(2)[2] + 3})

			createUnit('archer', 4, startLocation(4))
			createUnit('archer', 4, {startLocation(4)[1] + 2, startLocation(4)[2]})
			createUnit('stickfighter', 4, {startLocation(4)[1], startLocation(4)[2] - 2})
			createUnit('stickfighter', 4, {startLocation(4)[1] + 2, startLocation(4)[2] - 2})
			createUnit('stickfighter', 4, {startLocation(4)[1] - 2, startLocation(4)[2] - 1})
			createUnit('stickfighter', 4, {startLocation(4)[1] + 4, startLocation(4)[2] - 2})

			createUnit('axe_thrower', 5, {startLocation(5)[1] - 1, startLocation(5)[2]})
			createUnit('axe_thrower', 5, {startLocation(5)[1] + 1, startLocation(5)[2] + 1})
			createUnit('axe_natives', 5, {startLocation(5)[1] - 2, startLocation(5)[2] - 2})
			createUnit('axe_natives', 5, {startLocation(5)[1], startLocation(5)[2] - 2})
			createUnit('axe_natives', 5, {startLocation(5)[1] + 2, startLocation(5)[2] - 1})
			createUnit('axe_natives', 5, {startLocation(5)[1] + 4, startLocation(5)[2] - 1})

			createUnit('archer', 6, startLocation(6))
			createUnit('axe_thrower', 6, {startLocation(6)[1], startLocation(6)[2] - 2})
			createUnit('axe_thrower', 6, {startLocation(6)[1], startLocation(6)[2] + 2})
			createUnit('archer', 6, {startLocation(6)[1], startLocation(6)[2] - 4})
			createUnit('archer', 6, {startLocation(6)[1] + 1, startLocation(6)[2] + 4})
			createUnit('horseman', 6, {startLocation(6)[1] + 4, startLocation(6)[2]})
			createUnit('spearman', 6, {startLocation(6)[1] - 2, startLocation(6)[2] - 1})
			createUnit('spearman', 6, {startLocation(6)[1] - 2, startLocation(6)[2] + 1})
			createUnit('spearman', 6, {startLocation(6)[1] - 2, startLocation(6)[2] - 3})
			createUnit('spearman', 6, {startLocation(6)[1] - 1, startLocation(6)[2] + 3})

			createUnit('fire_golem', 7, startLocation(7))
			createUnit('shaman', 7, {startLocation(7)[1], startLocation(7)[2] - 3})
			createUnit('shaman', 7, {startLocation(7)[1] + 1, startLocation(7)[2] + 4})
			createUnit('fire_archer', 7, {startLocation(7)[1] - 4, startLocation(7)[2] - 1})
			createUnit('fire_archer', 7, {startLocation(7)[1] - 4, startLocation(7)[2] + 1})
			createUnit('fire_archer', 7, {startLocation(7)[1] - 2, startLocation(7)[2] + 3})
			createUnit('fire_archer', 7, {startLocation(7)[1] + 6, startLocation(7)[2] - 1})
			createUnit('fire_archer', 7, {startLocation(7)[1] + 6, startLocation(7)[2] + 1})
			createUnit('fire_archer', 7, {startLocation(7)[1] + 7, startLocation(7)[2] + 3})
			createUnit('fire_archer', 7, {startLocation(7)[1] + 5, startLocation(7)[2] - 3})

			-- Show mission objective
			setDisplayText('objective')
		</startup>
		<cellTriggerEvent>
			clearDisplayText()
			setPlayerAsWinner(0)
			setPlayerAsWinner(3)
			endGame()
		</cellTriggerEvent>
		<unitDied>
			if lastDeadUnit() == worker then
			    clearDisplayText()
				setPlayerAsWinner(1)
				setPlayerAsWinner(2)
				setPlayerAsWinner(4)
				setPlayerAsWinner(5)
				setPlayerAsWinner(6)
				setPlayerAsWinner(7)
				endGame()
			end
		</unitDied>
	</scripts>
</scenario>
